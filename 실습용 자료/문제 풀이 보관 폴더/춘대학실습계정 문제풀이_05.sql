-- DDL


-- 1.
CREATE TABLE TB_CATEGORY (
    NAME VARCHAR2(10),
    USE_YN CHAR(1) DEFAULT 'Y'
    
);

-- 2.
CREATE TABLE TB_CLASS_TYPE (
    NO VARCHAR2(5) PRIMARY KEY,
    NAME VARCHAR2(10)
);

-- 3.
ALTER TABLE TB_CATEGORY ADD CONSTRAINT NAME_PK PRIMARY KEY (NAME);

-- 4. 
ALTER TABLE TB_CLASS_TYPE MODIFY  NAME NOT NULL;

-- 5. 
ALTER TABLE TB_CLASS_TYPE
MODIFY NO VARCHAR2(10)
MODIFY NAME VARCHAR2(20); 

ALTER TABLE TB_CATEGORY
MODIFY CATEGORY_NAME VARCHAR2(20);

-- 6.
ALTER TABLE TB_CLASS_TYPE
RENAME COLUMN NO TO CLASS_TYPE_NO;

ALTER TABLE TB_CLASS_TYPE
RENAME COLUMN NAME TO CLASS_TYPE_NAME;

ALTER TABLE TB_CATEGORY
RENAME COLUMN NAME TO CATEGORY_NAME;

ALTER TABLE TB_CATEGORY
RENAME COLUMN USE_YN TO CATEGORY_USE_YN;

-- 7. 
ALTER TABLE TB_CATEGORY
RENAME CONSTRAINT NAME_PK TO PK_CATEGORY_NAME;

ALTER TABLE TB_CLASS_TYPE
RENAME CONSTRAINT SYS_C007081 TO PK_CLASS_TYPE_NO;

-- 8.
INSERT INTO TB_CATEGORY VALUES('공학', DEFAULT);
INSERT INTO TB_CATEGORY VALUES('자연과학', DEFAULT);
INSERT INTO TB_CATEGORY VALUES('의학', DEFAULT);
INSERT INTO TB_CATEGORY VALUES('예체능', DEFAULT);
INSERT INTO TB_CATEGORY VALUES('인문사회', DEFAULT);

COMMIT;

-- 9. 
ALTER TABLE TB_DEPARTMENT 
ADD CONSTRAINT FK_DEPARTMENT_CATEGORY 
FOREIGN KEY(CATEGORY) REFERENCES TB_CATEGORY (CATEGORY_NAME);

-- 10. 
CREATE OR REPLACE VIEW VW_STUINFO
AS SELECT STUDENT_NO, STUDENT_NAME, STUDENT_ADDRESS
    FROM TB_STUDENT;
    
-- 11.
CREATE OR REPLACE VIEW VW_CPINTERVIEW
AS SELECT STUDENT_NAME, DEPARTMENT_NAME, PROFESSOR_NAME
    FROM TB_STUDENT
    JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
    LEFT JOIN TB_PROFESSOR ON (COACH_PROFESSOR_NO = PROFESSOR_NO)
    ORDER BY DEPARTMENT_NAME;
    
    
-- 12.
CREATE OR REPLACE VIEW VW_DEPTCOUNTST
AS SELECT DEPARTMENT_NAME, COUNT(STUDENT_NAME) "STUDENT_COUNT"
    FROM TB_STUDENT
    JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
    GROUP BY DEPARTMENT_NAME;
    

-- 13.
UPDATE VW_STUINFO
SET STUDENT_NAME = '정찬복'
WHERE STUDENT_NO = 'A213046';

-- 14.
CREATE OR REPLACE VIEW VW_STUINFO
AS SELECT STUDENT_NO, STUDENT_NAME, STUDENT_ADDRESS
    FROM TB_STUDENT
WITH READ ONLY;


-- 15.

--
--SELECT CLASS_NO, CLASS_NAME, COUNT(STUDENT_NO)
--FROM TB_CLASS
--JOIN TB_GRADE USING(CLASS_NO)
--GROUP BY CLASS_NAME, STUDENT_NO, CLASS_NO
--ORDER BY COUNT(STUDENT_NO) DESC;

