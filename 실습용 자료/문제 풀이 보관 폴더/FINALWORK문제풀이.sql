--3.
SELECT BOOK_NO, BOOK_NM
FROM TB_BOOK
WHERE LENGTH(BOOK_NM) >= 25;

--4.

SELECT ROWNUM, W.* -- OR *
FROM (
        SELECT WRITER_NM, OFFICE_TELNO,HOME_TELNO,MOBILE_NO
        FROM TB_WRITER
        WHERE MOBILE_NO LIKE '019%'
            AND WRITER_NM LIKE '김%'
        ORDER BY WRITER_NM) W   -- W 해도되고 안해도됨!

WHERE ROWNUM = 1;   -- 정렬이 되어있으므로!





--5. 나중에 한번더 풀기
-- SELECT WRITER_NM "작가(명)", BOOK_NO     -- 작가는 책을 여러권 쓰므로, 작가 이름 여러번 나옴! DISTINCT
SELECT COUNT(DISTINCT WRITER_NM) "작가(명)"
FROM TB_BOOK_AUTHOR
JOIN TB_WRITER USING(WRITER_NO)
WHERE COMPOSE_TYPE = '옮김';

--6.
SELECT COMPOSE_TYPE, COUNT(*)
FROM TB_BOOK_AUTHOR
GROUP BY COMPOSE_TYPE
HAVING COUNT(COMPOSE_TYPE) >= 300;

--7.
-- ROWNUM 활용
SELECT *
FROM (SELECT BOOK_NM
        , ISSUE_DATE
        ,PUBLISHER_NM
        FROM TB_BOOK
        ORDER BY ISSUE_DATE DESC)
WHERE ROWNUM = 1;


-- MAX 함수 활용법
SELECT BOOK_NM
     , ISSUE_DATE
     , PUBLISHER_NM
FROM TB_BOOK
WHERE ISSUE_DATE = (SELECT MAX(ISSUE_DATE)
                     FROM TB_BOOK);


--8. 
-- 책을 많이 쓴 작가 순서대로
SELECT WRITER_NM, COUNT(WRITER_NO)
FROM TB_WRITER 
JOIN TB_BOOK_AUTHOR USING(WRITER_NO)
GROUP BY WRITER_NM
ORDER BY COUNT(BOOK_NO) DESC;

-- 상위 3명만 조회
SELECT 작가이름,권수
FROM (SELECT WRITER_NM "작가이름",
      COUNT(WRITER_NO) "권수",
      DENSE_RANK() OVER(ORDER BY COUNT(BOOK_NO) DESC) 순위
      FROM TB_WRITER 
      JOIN TB_BOOK_AUTHOR USING(WRITER_NO)
      GROUP BY WRITER_NM)
WHERE 순위 <= 3;      


-- 9. 선생님 질문하기 맞게 이해했는지
UPDATE TB_WRITER A
SET REGIST_DATE = (SELECT MIN(ISSUE_DATE) -- 3. 그래야 작가별 최초 발행일을 뽑을 수 있다?
                    FROM TB_BOOK
                    JOIN TB_BOOK_AUTHOR USING(BOOK_NO) -- 2. 책을 쓴작가와 책을 조인
                    WHERE A.WRITER_NO = WRITER_NO); -- 1.작가 들 중에서 책을 쓴 작가들을 추리는 작업!
                 
COMMIT;

--10.
CREATE TABLE TB_BOOK_TRANSLATOR (
    BOOK_NO VARCHAR2(10) NOT NULL,
    WRITER_NO VARCHAR2(10) NOT NULL,
    TRANS_LANG VARCHAR2(60),
    CONSTRAINT PK_BOOK_TRANSLATOR PRIMARY KEY (BOOK_NO, WRITER_NO),
    CONSTRAINT FK_BOOK_TRANSLATOR_01 FOREIGN KEY (BOOK_NO) REFERENCES TB_BOOK (BOOK_NO),
    CONSTRAINT FK_BOOK_TRANSLATOR_02 FOREIGN KEY (WRITER_NO) REFERENCES TB_WRITER (WRITER_NO)

);

-- 주석 추가
COMMENT ON COLUMN TB_BOOK_TRANSLATOR.WRITER_NO IS '작가 번호';
COMMENT ON COLUMN TB_BOOK_TRANSLATOR.BOOK_NO IS '도서 번호';
COMMENT ON COLUMN TB_BOOK_TRANSLATOR.TRANS_LANG IS '번역 언어';



--11. 문제를 꼼꼼히 읽었다면 맞게 풀었을 텐데....
INSERT
INTO TB_BOOK_TRANSLATOR (BOOK_NO,WRITER_NO)

    SELECT BOOK_NO,WRITER_NO
    FROM TB_BOOK_AUTHOR
    WHERE COMPOSE_TYPE IN ('옮김', '역주', '편역', '공역');

DELETE FROM TB_BOOK_AUTHOR
WHERE COMPOSE_TYPE IN ('옮김', '역주', '편역', '공역');


-- 12.


SELECT BOOK_NM 번역서이름,
       WRITER_NM 번역자

FROM TB_BOOK_TRANSLATOR

JOIN TB_BOOK USING(BOOK_NO)
JOIN TB_WRITER USING(WRITER_NO)

WHERE COMPOSE_TYPE = '엮음'
    AND EXTRACT (YEAR FROM ISSUE_DATE) = 2007;


-- 13.

CREATE OR REPLACE VIEW VW_BOOK_TRANSLATOR
AS (SELECT BOOK_NM 도서명,
       WRITER_NM 번역자,
       ISSUE_DATE 출판일

   FROM TB_BOOK_TRANSLATOR

   JOIN TB_BOOK USING(BOOK_NO)
   JOIN TB_WRITER USING(WRITER_NO)

   WHERE EXTRACT (YEAR FROM ISSUE_DATE) = 2007)
   WITH CHECK OPTION;

-- 14.
INSERT 
INTO TB_PUBLISHER 
VALUES('춘 출판사', '02-6710-3737',DEFAULT);

-- 15.

-- 1.
SELECT WRITER_NM
    , COUNT(WRITER_NO)
FROM TB_WRITER
GROUP BY WRITER_NM
HAVING COUNT(WRITER_NO)>1;

-- 2.

SELECT WRITER_NM
     , COUNT(*)
  FROM TB_WRITER
 GROUP BY WRITER_NM
HAVING COUNT(*) > 1; 

-- 16.
UPDATE TB_BOOK_AUTHOR
SET COMPOSE_TYPE = '지음'
WHERE COMPOSE_TYPE IS NULL;

COMMIT;

-- 17.
SELECT WRITER_NM, OFFICE_TELNO
FROM TB_WRITER
WHERE OFFICE_TELNO LIKE '02%'
    AND SUBSTR(OFFICE_TELNO,7,1) = '-';
-- WHERE OFFICE_TELNO LIKE '02-___-%'; 이것이 클린


-- 18.
SELECT WRITER_NM
FROM TB_WRITER
WHERE EXTRACT(YEAR FROM (TO_DATE(20060101, 'RRRRMMDD'))) - EXTRACT(YEAR FROM REGIST_DATE)  >= 31;
-- WHERE MONTHS_BETWEEN(TO_DATE('20060101', 'RRRRMMDD'), REGIST_DATE) >= 372;


-- 19.
SELECT BOOK_NM 도서명,
       PRICE 가격,
       STOCK_QTY 재고수량,
       CASE WHEN STOCK_QTY >= 5 THEN '소량보유'
       ELSE '추가주문 필요'
       END 재고상태
FROM TB_BOOK
WHERE PUBLISHER_NM = '황금가지'
    AND STOCK_QTY <= 10
ORDER BY 재고수량 DESC,
         도서명;



-- 20. 두고두고 다시한번 풀어보기
SELECT BOOK_NM "도서명"
     , D.WRITER_NM "저자"
     , E.WRITER_NM "역자"

FROM TB_BOOK A

JOIN TB_BOOK_AUTHOR B USING (BOOK_NO)
JOIN TB_BOOK_TRANSLATOR C USING (BOOK_NO)
JOIN TB_WRITER D ON (B.WRITER_NO = D.WRITER_NO) -- 지음 작가 찾는 조인! -- 테이블의 공통요소만 추출하기 때문에
JOIN TB_WRITER E ON (C.WRITER_NO = E.WRITER_NO) -- 옮김 작가 찾는 조인! -- 테이블의 공통요소만 추출하기 때문에

WHERE BOOK_NM = '아타트롤';

-- 21.
SELECT BOOK_NM "도서명",
       STOCK_QTY "재고수량",
       PRICE "가격(org)",
       PRICE*0.8 "가격(new)"

FROM TB_BOOK

WHERE EXTRACT(YEAR FROM SYSDATE) - EXTRACT(YEAR FROM ISSUE_DATE) > 30
    AND STOCK_QTY >= 90
    
ORDER BY 재고수량 DESC,
         "가격(new)" DESC,
         도서명 ;
/*         
 ORDER BY 2 DESC
        , 4 DESC
        , 1 ASC;
*/